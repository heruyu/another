Do dzieła!

We wcześniejszym liście pytała Pani o styl. Na tyle, na ile zdołałem
prześledzić tekst, to nie jest jakoś strasznie.
Z jednym wyjątkiem :). 
Jestem uczulony na sztampowe, a nie niosące
żadnej treści truizmy, w stylu „Dane odgrywają niezwykle istotną rolę
w funkcjonowaniu współczesnego społeczeństwa ...”, czy „Komputery są
obecnie powszechnie używane ...”, czy coś jeszcze gorszego.

Poza tym jest trochę wad językowych, ale na tym wszystkim pracuje się
nad tym na końcu. Ważniejsza jest ogólna konstrukcja.
Teraz, mając już trochę materiału mogę sobie ją wyimaginować.

1) Cel pracy, określony we wstępie: „przedstawienie możliwości systemu”,
  „praca skupi się na zaprezentowaniu konceptu aplikacji”, „szczegółowym
   opisie implementacji modułu obsługi artykułów”.

Nasuwa się szereg pytań. Czy system jest już skończony? Czy działa?
A jak jeszcze nie, to czy jego możliwości będą osiągalne wkrótce?

Jeżeli na żadne z powyższych pytań odpowiedź nie jest w pełni pozytywna,
to temat „przedstawienie możliwości systemu” nie jest bezpieczny.
A prosta zamiana na „opis _planowanych_ możliwości”, nie jest poważna.

Może lepie przeformułować na coś w stylu: opis projekt i jego (wstępnej? elementów?) implementacji.


2) ** Tak, żeby uniknąć niezgranych wstępów, można wstęp zacząć od
   postawienia celu, a potem podawać uzasadnienia. Oczywiście, wstęp
   nie powinien być za długi. **


3) W opisie celu pracy, wyeksponowałbym:
   - gromadzenie, katalogowanie i przeszukiwanie zgromadzonych zbiorów
     danych,
   - (prosty? mały?) system przeznaczony dla indywidualnego użytkownika
     (Wyjaśnienie: bo z rozwiązaniami korporacyjnymi nie co konkurować;
      czy, w tym kontekście, tak się mówi: „indywidualny użytkownik”?)
   - wyposażony (lub z możliwością wyposażenia) w rozszerzenia
     automatyzujące procedurę klasyfikacji i katalogowania, oparte na
     technikach AI,
     można napomknąć o osadzonym module generowaniu abstraktów,

4) Rozdział: „Zagadnienia związane z tematem pracy".
   * Tytuł jest w wersji roboczej – trochę za długi.
   * „Zagadnienia teoretyczne” są zbyt pompatyczne – to nie
     astrofizyka.

   Zastrzeżenia. Obecnie, rozdział zawiera jakieś treści, ale nie
   wiadomo, jak się one wiążą z tematem pracy. I są jakby z „dwóch
   krańców”, z brakiem tekstu, który by je jakoś łączył.

   Moja propozycja, to zaczęcie od pobieżnej charakterystyki projektu.
   Zrobić to wręcz hasłowo, ograniczając się do tematów, które będą
   omawiane dalej, w tym rozdziale. Starają się by nie było nadmiernego
   podobieństwa do tekstu opisującego cel.

   Przykłady, jakie mi przychodzą do głowy:
   a) Projektowany system ma służyć do gromadzenia informacji. Do jej
      przechowywania można wykorzystać narzędzia ogólnego zastosowania:
      pliki w systemie plików, albo narzędzia specjalizowane, jak
      systemy baz danych.
      Również do wyboru jest aspekt fizyczny: nośniki danych, serwisy,
      oraz lokalizacja usług  ....
      itp.
      Zagadnienia te są dokładniej omawiane w punkcie 1.x
   b) Wraz z danymi, składowane będą metainformacje, opisujące te dane.
      - część z nich potrzebna do zarządzania kolekcjami,
      - przewidywane jest także gromadzenie wiedzy o znaczeniu
        zawartości (informacje semantyczne),
      - inf, semantyczne będą wprowadzane i modyfikowane przez
        użytkownika, ale przewidywane sa narzędzia AI
      W podrozdziale 1.X ... dotyczące istniejących narzędzi i rozwiązań
      używanych do generowania abstraktów z materiałów tekstowych.
   c) Projektowane narzędzie będzie zrealizowane w architekturze ...
      Krótki przegląd podstawowych architektur programów jest
      zamieszczony w ...

5) Uwaga !! Czy przemyślenia w 1.1 są samodzielne? Bo jak nie, to
   wypadałoby powołać się na jakieś publikacje.


I na tym skończę, by nie przedłużać listu.
Dodam tylko, że dobrze, że są diagramy. I 3/4 mi się podoba.

Kontynuując,

rozdział drugi jest nieczytelnym konglomeratem. Projekt to jest coś
innego niż implementacja, i nie należy tego łączyć.
Poza tym, to nie jest realizacja sklepu internetowego. Ten opis
można przygotować tak, żeby wyszło, że była to praca koncepcyjna.

Proponuję dwa rozdziały. I opcjonalnie trzeci.

1) Projekt
  a) Ponieważ wcześniej nie było takich informacji, dlatego, jako
     wprowadzenie, wypadałoby zaprezentować ogólną wizję, jak taki
     system miałby wyglądać i działać. Unikając przy tym szczegółów
     technicznych oraz założeń dotyczących rzeczywistej realizacji.

   b) Następnie omówić projekt. Proponuję przyjąć taktykę top-down.
      Najpierw ogólny schemat: podstawowe składowe i komunikacja między
      nimi. A w następnych krokach zajmować się wybranymi szczegółami.

      Wybierać przy tym to, co jest istotne albo ciekawe.
      Oczywiście zachować umiar: nie można rozdziału zbyt rozbudowywać,
      ani dostarczać nużących szczegółów.

   c) Jest jeden ciekawy element. Sam projekt pasuje do architektury
      klient-serwer, czy wręcz webowej. Natomiast zastosowanie elektrona
      pozornie to psuje. Ale opis tego faktu nie powinien znajdować się
      w projekcie, tylko w szczegółach implementacji.

2) Implementacja
  a) Na początku wypadałoby wymienić narzędzia użyte do realizacji
     projektu: języki, szkielety aplikacji, biblioteki, czy zewnętrzne
     komponenty. Dodawać tylko krótkie opisy.
     Jeżeli coś będzie wymagało szerszego omówienia zrobić podrozdział.

  b) Takiego omówienia wymaga elektron, ponieważ podstępnie zmienia
     klasyfikację architektury.
     Być może opis tego, co on robi, należałoby dać do rozdziału 1
     (wtedy podrozdział nie byłby potrzebny).
     Ale jak to zrobić, żeby było ogólnie, „teoretycznie”, zgodnie
     z duchem rozdziału 1?

   c) Można zamieścić inne uwagi dotyczącej realizacji systemu. Np.
      związane z odejściem od planów. W szczególności: plany są ambitne,
      a realizacja skromniejsza, tylko jako przykład.

3) Jeżeli jest co pokazywać, a dokument jeszcze to pomieści, można
   dodać rozdział z krótki opisem uzyskanych rezultatów (tj. jak program
   wygląda i działa).

I to by było na dzisiaj tyle.

Pozdrawiam
P.Oleksik

Dzień dobry,
trochę ciężko mi odpowiadać, gdy nie widzę proponowanego tekstu. Za dużo
zmiennych, a ja nie mam dobrej wyobraźni. Ale postaram się coś napisać.

Po pierwsze, proszę się nie rozpędzać z objętością. Na tym poziomie dokument powinien mieć ~40 stron. Ale nie jest to rygorystycznie
przestrzegane.


== Ad 3. ==
3. Projekt
     z tego co rozumiem, to tutaj może być w pierwszej części mniej
więcej, że:
     - użytkownik może np.: dodać plik, wyszukać plik, wyświetlić
informacje o pliku
     - co się dzieje po stronie serwera po dodaniu danego rodzaju pliku

Współczesne projekty informatyczne są wielopoziomowe i wieloaspektowe.
Opisuje się je od strony funkcjonalnej (np. przez spisy wymagań
funkcjonalnych i niefuncjonalnych, przez scenariusze użytkowania,
„historyjki”),  architektonicznej (składowe elementy, budujące całość,
oraz komunikacja z nimi), UI/UX ...

Pytanie: ile z tego trzeba w takiej pracy?

Moim zdaniem, to jest praca koncepcyjna – wymyślenie czegoś nowego.
Dlatego zacząłbym od opisania wyidealizowanej wersji. Ale w sposób
realistyczny i techniczny. (Nie: „użytkownik może kliknąć” tylko „na
żądanie użytkownika, aplikacja...").
I uzupełnił ją komentarzem, co jest możliwe do zrealizowania (w tak
krótkim czasie). I na tym komentarzu oparłbym projekt. Który w
zamieraniu ma być zrealizowany ( → poniższe komentarze do realizacji).




== Ad 5. ==
Decyzję, czy łączyć 4 i 5, proszę odłożyć do czasu, aż będzie dość
przesłanek, by wiedzieć w jaką stronę zmierza wypowiedź.

Gdyby jednak pozostał osobny rozdział, to jego tytuł mógłby brzmieć np.
„Omówienie rezultatów”, „Prezentacja wyników”, czy po prostu „Wyniki”.

    czy tutaj przenieść dział o schematach poszczególnych
funkcjonalności ale dodać do każdej z nich (gdzie to możliwe) odpowiedź
serwera
     - jedyne co by miało sens aby dodać jak to wygląda w aplikacji to
jak wygląda wyszukiwanie plików bo reszta działa na podstawie dodaj plik
i rzeczy się będą "dziać"

Ten rozdział ma opisywać stan faktyczny, a nie być przewodnikiem
użytkownika („na prawo klik, na lewo klik, ...”). Tak samo, to nie
miejsce na elementy projektu. Chociaż, gdyby implementacja odbiegała od
projektu lub założeń, tu należy to udokumentować.


Myślę, że zacząć można od ogólnego określenia statusu i stanu implementacji.
Przez status rozumiem założenia odnośnie konkretnej realizacji, np:
- koncepcyjna, do weryfikacji przyjętych założeń (proof of concept),
- minimalna, nadającą się do użytkowania (Minimal Viable Product),
- ...
- pełna implementacja projektu.

Jeżeli nie jest to pełna implementacja, to właśnie będzie miejsce na
określenie jakie składowe i funkcjonalności były przyjęte do
realizacji.

Stan implementacji, to opisanie, ile z w/w założeń udało się już
zrealizować. Oczywiście, można odrobinę podkolorować.

Na końcu można przejść do opisu działania aplikacji. Ile w nim
zamieścić, to oczywiście zależy od tego, ile  miejsca zostało. I jak
Pani zauważyła, w tym przypadku nie ma co się bawić w opis wyglądu,
tylko raczej tego co się dzieje. Co się liczy, jakie zmiany zachodzą
(np. jakie pliki powstają, itp).

Tak na szybko o rozdziale 2.

1) Usunąłbym 'system' z tytułu z dwóch powodów, w tym z czysto
   pragmatycznego: gdy się za wcześnie ono pojawi w tekście, to będzie
   wyglądało na powtórzenie (błąd stylistyczny).

2) Myślę, że wstęp powinien być lżejszym językiem. To jeszcze nie jest
   opis projektu, tylko wizja, do czego powinien on doprowadzić.
   Coś w stylu:

Celem pracy inżynierskiej było zaprojektowanie i wykonanie narzędzia
informatycznego [1] wspomagającego gromadzenia informacji oraz
późniejsze przeszukiwanie utworzonych kolekcji.
Wśród jego planowanych funkcjonalności należy wymienić:
- możliwość gromadzenia danych różnych rodzajów (dokumenty tekstowe
  i hipertekstowe, dane tabelaryczne, grafiki i inne),
- automatyczną organizację i kategoryzację ...
- automatyczne generowanie streszczeń dokumentów tekstowych tak, by ...

Docelowym odbiorcą produktu  ma być indywidualny użytkownik,
korzystający z lokalnych zasobów. Dlatego założeniem projektowym było,
aby unikać używania usług zewnętrznych, np. chmurowych.

3) Po opisie marzeń można trochę konkretniej

Ze względu na rozbudowany charakter narzędzia, zostało ono
zaprojektowane jako system [2] współpracujących elementów. Będą to:

- moduł organizacji danych, ... (krótki opis),
- wyszukiwarka, ... (krótki opis)
- ...

Wymienione [3] moduły będą omówione w kolejnych punktach.

4) Powyższe dobrze byłoby zakończyć rysunkiem przedstawiającym w/w
    składowe i relacje między nimi, np. przepływ danych i sterowania.

5) Organizacja dalszego tekstu może być różnoraka, w zależności od
   preferencji i humoru. To co już jest najbardziej przypomina opis
   funkcjonalny. Żeby tego dorobku nie stracić, można zrobić podrozdział
   o takiej nazwie (Opisy funkcjonalne modułów?)  i tam to umieścić.
   Po korektach.

6) Rysunki 4,5,6 w mojej opinii należą do projektu! I tego typu
   informacje powinny być zamieszczone w kolejnych podrozdziałach.
   Oczywiście, nie ma miejsca żeby wszystko opisywać. Co ułatwia,
   bo można wręcz napisać, że pokazywane są tylko wybrane wyrywki
   z projektu.

7) Nb., rysunek 1 jest przeskalowany – za duży względem otaczającego
   tekstu.

Dodam jeszcze, że w projekcie trzeba nadmienić o miejscu gromadzenia danych i metainformacji. Nie wiem jak dużo, ale zawsze dobrze jest zrobić diagram.
Gdy już się ma opisany projekt (choćby pobieżnie) można i należy się na niego powoływać w dalszych rozdziałach.


Tak na szybko o rozdziale 3.

Postulowałbym inną kolejność i uproszczenie języka. Pierwsze zdanie jest karkołomne!

Przy okazji, nie wiem czy dobrze zrozumiałem. Aplikacja UI jest osobno a
serwer WWW i baza DB osobno. Czy też wszystko jest już w jednym programie?.
I czy w związku z tym, rysunek 1 jest właściwy? Ten „React Interfejs” jest jakimś modułem? Jak nie, to może w ramkę innego kształtu?
(Może wszystko na rysunku przerobić na angielski?)
A w  ramce z Electron  zmienić napis np. przez dodanie „(interfejs graficzny)” czy (aplikacja dekstopowa).


Ponieważ chce Pani iść w kierunku P-o-C, to rozdział można zacząć w taki sposób:
"""
Realizacja projektu miała na celu wykazanie ... (no właśnie, czego?)
Objęła ona wszystkie istotne jego składowe: bazę danych, serwer WWW,
pośredniczący w dostępie do tej bazy, moduł generowania abstraktów, oraz
interfejs użytkownika.
"""

Później trochę szczegółów:

"""
UI zrealizowano przy użyciu technik i rozwiązań typowych dla aplikacji webowych (patrz: <referencja do odpowiedniego miejsca w rozdziale 1>). Użyto do tego języka JavaScript, biblioteki React w tym języku, oraz języków opisu struktury i wyglądu dokumentu HTML i CSS.
Jednak całość osadzono w szkielecie aplikacyjnym Electron, który tworzy własny interfejs graficzny tak, że powstaje niezależna aplikacja,
niepotrzebująca już przeglądarki WWW (patrz: <ref. do r.1>).
"""
Uwaga, niektórzy nabijają liczniki referencji dodając odnośniki do stron projektów czy produktów. Czyli po JavaScript i po React.

"""
Do gromadzenia danych zdecydowano się na nierelacyjną bazę danych (NoSQL), której realizację oparto na silniku MongoDB  [referencje do strony projektu].
...
"""
Można dodać jakieś argumenty dla takiej decyzji.

Następnie parę zdań o serwerze WWW:
- pośredniczy między bazą a aplikacją użytkownika,
- realizuje jakieś zadania,
- jest stworzony w języku Python, z wykorzystaniem biblioteki Flask.

Oczywiście rysunek pokazujący relacje.

Dalej opisy wybranych bibliotek umieszczać w kolejnych podrozdziałach.
Powyżej było już o elektronie, więc nie wiem, czy dodanie podrozdziału
ma sens. Chyba, że będzie jego opis tu, a nie w rozdziale 2.

Na koniec dać podrozdział z opisem stanu implementacji, różnic i ewentualnie problemów.

Dzień dobry,
z odpowiedzią czekałem na kolejną wersję (3.5), ale niepotrzebnie.
Teraz skupię się na uwagach do stylu. Są ogólne, ale na przykładzie wstępu. Mam nadzieję, że się Pani przydadzą teraz i w przyszłości (np. przy pisaniu dokumentacji).

Miało być krótko, ale się nie udało.
C.D.N.


------%<---------------------------------------------------------------

Dużo dyplomantów przejawia magiczne myślenie, że praca dyplomowa powinna
być niezrozumiała i naszpikowana odstraszającymi sformułowaniami. Wtedy
zyska uznanie w oczach recenzenta.
To błąd. Powinna być napisana tak, by chciało się ją czytać. Oczywiście,
styl powinien być oficjalny, bez poufałości („Grębosz”!!) i kolokwializmów.
Należy też uważać na sformułowania, które u odbiorcy mogłyby wywoływać
wrażenie nadmiernej pewności autora, niespełnialnych obiecanek, czy też
ochotę na ich weryfikację.

Po tym wstępie ad rem.

1)

"""
Poniższa praca ma na celu zapewnienie kompleksowego przeglądu projektu aplikacji,
która umożliwi osobom fizycznym lepsze zarządzanie i wykorzystywanie własnych
zasobów wiedzy. Przedstawiając tym zasady projektowania, szczegóły implementacji
i potencjalne rozszerzenia aplikacji.
"""

a) „na celu zapewnienie”
   zapewnienie = danie pewności albo zagwarantowanie dostarczenia
      czegoś,
   - gwarantuje Pani cokolwiek?

   - użycie „na celu” ma w sobie ukrytą możliwość zaprzeczenia wynikom,
     tj.:  „miało na celu, ale się nie udało”
     połączenie tego z „zapewnianiem” daje dziwne odczucia,

b) „kompleksowego przeglądu” –
   - kompleksowy, czyli całkowity,
   - przegląd - czyli pobieżny.
   Byłoby to w porządku, ale na pewno nie przedstawia Pani wszystkiego,
   nawet pobieżnie. A więc obietnica bez pokrycia.

c) „która umożliwi ...”
   - ale to praca eksperymentalna: nie wiadomo, czy pomysł jest dobry,
     on jest dopiero testowany,
   - problem tkwi w użytym w trybie: (powinien być przypuszczający),
     albo czasie (przyszły);
     można zmienić formę na opis celu: ma umożliwiać,
   - może lepiej skrócić do samej funkcjonalności („do zarządzania”).

d) „wykorzystywanie własnych zasobów wiedzy” - to jest niefortunne
     sformułowanie; kojarzy się z „wiedzą w głowie”.
    Poza tym sugeruje, że zasoby już są, a nie, że aplikacja będzie je
    dopiero gromadzić.

e) „osoby fizyczne” – tu jest kłopot z rozumieniem tego sformułowania.
   Musi być ono osadzone we właściwym kontekście i we właściwej formie.

   Skąd te problemy? Normalnie osoba to synonim człowieka. Ale już
   „osoba fizyczna” pojawia się w terminach prawniczych, na odróżnienie
   od  „osoby prawnej”. Ta druga może człowiekiem, ale też może być
   instytucją, czy czymś tam jeszcze (podmiot prawny).

   W tym wypadku chodzi raczej o rozróżnienie „użytkowanie indywidualne”
    vs „zbiorowe”, np. w korporacji, czy grupie na githubie. To ciężko
   ująć normalnie, a trochę strach używać sformułowań z reklam
   (użytkownik korporacyjny).

   Można próbować to ominąć opisując docelową skalę aplikacji: mała,
   z małą bazą danych, dla (stosunkowo?) niewielkich zasobów, do
   __użytku_indywidualnego__ (ew. prywatnego, choć to coś innego).

f) „Poniższa praca” - gdyby chodziło o fragment tekstu (np. rozdział) to
    kierunek poniżej/powyżej ma sens. A tu chodzi o całość (włącznie ze
    stronami poprzedzającymi). Więc raczej: niniejsza, prezentowana,
    itp.

g) „Przedstawiając tym zasady projektowania, szczegóły implementacji i
   potencjalne rozszerzenia aplikacji.”
   Ogólnie z błędami („tym”?).

   A w szczegółach:
   - nie są omawiane „zasady projektowania” - i dobrze, Pani się zajmuje
     konkretną aplikacją, a nie metodologią projektowania,
   - „szczegóły implementacji” - nie ma na ten temat za dużo, więc to
     sformułowanie jest na wyrost.


A to dopiero pierwszy akapit!
Dalej już nie tak szczegółowo.


2)
"""
Aplikacja ułatwia płynne gromadzenie danych, umożliwiając użytkownikom
importowanie i przechowywanie plików zawierających cenne informacje.
"""
1) co oznacza „płynne gromadzenie danych”
2) czy czas i tryb nie są zbyt optymistyczne (wszystko działa?)
3) „cenne informacje” - nie brzmi zbyt oficjalnie.

"Pliki te, określane zbiorczo jako zbiór danych, ..." - to wynika z
poprzedniego zdania.



3)

"""
... obejmują szeroki zakres typów treści, z których każdy reprezentuje wiedzę
możliwą do interpretacji przez człowieka. Od prac naukowych po osobiste
notatki i pliki multimedialne, projekt systemu uwzględnia obsługę różnych
formatów danych, aby zaspokoić indywidualne preferencje i wymagania
użytkowników.
"""


a) Nie jest jasne, co to jest „szeroki zakres typów treści" i do czego
   potrzebna jest „interpretacja przez człowieka."
   To trzeba rozwinąć.

b) Podanie, jako „typów treści”, „Od prac naukowych po osobiste
     notatki i pliki multimedialne”, chyba nie jest szczęśliwe.
   Czy system rozpoznaje, co jest pracą naukową, a co beletrystyką?

   Nie wiem czy dobrze interpretuję, ale chyba chodzi o:
   - pliki w dowolnych formatach,
   - których zawartość, po rozpoznaniu formatu, może być przez aplikację
     analizowana w celu wspomagania klasyfikacji

   Nb. w reszcie dokumentu nie zauważyłem, czy dane innego typu (np.
   tabelaryczne) są jakoś przetwarzane,



4)
"""
Choć początkowo została zaprojektowana jako proste rozwiązanie
programowe dla użytkowników prywatnych, aplikacja może być wyposażona
w rozszerzenia, które wykorzystują techniki sztucznej inteligencji (AI).
"""
* Pojawia się kilka niejasności:
  - czy rozwiązania dla „użytkowników prywatnych” stoją w sprzeczności
    z AI?
  - czy „początkowo” oznacza, ze _już_ tak nie jest, w szczególności,
    czy jest to w opozycji do stwierdzenia „aplikacja może być
    wyposażona" (czas!).

* Zamiast niebezpiecznego „użytkownika prywatnego”, lepiej użyć
„indywidualnego użytku”.

* Myślę, że znowu, najlepiej uprościć:
  - zaprojektowana jako ...
  - z możliwością  ...



5)
"W niniejszym dokumencie zostanie zagłębiony koncept ... "

* No bez przesady! Nie pisze Pani scenariusza do kontynuacji 1670. Skąd
  te archaizmy?
* O możliwym rozwoju jest niewiele, więc lepiej tego w tym miejscu nie
  wspominać.


6)
"""Ponadto zostanie zbadana integrację rozszerzeń opartych na sztucznej
inteligencji w celu zautomatyzowania takich elementów jak proces klasyfikacji,
oferując wgląd w podstawowe algorytmy i strategie wdrażania.
"""
* gramatyka
* „zostanie zbadana” – jak to interpretować?
  - w przyszłości?
  - w tym dokumencie?
  Żadna z odpowiedzi nie jest dobra. W tym dokumencie jest trochę na ten
  temat, ale nie na tyle, by określać to „zbadaniem”.
* „... oferując wgląd...” - zbyt patetycznie.

To kontynuacja. Rozdział 1.
Teraz bardziej pobieżnie.
(I proszę pamiętać, że prostota jest cenna.)

Pozdrawiam
P.Oleksik

------%<---------------------------------------------------------------

1)  Tytuł rozdziału jeszcze wymaga namysłu. Ale to później.

2) „Zaprojektowany system ma uprościć proces gromadzenia informacji dla
   użytkownika prywatnego.”

   - jest przeznaczony do gromadzenia i klasyfikowania danych
   - ... dla indywidualnego użytkownika,
     („użytkownik prywatny” zalatuje PRL-em)


3) „Zgromadzone dane mogą być przechowywane...”

   - w wypowiedzi trzeba jasno odróżnić informacje ogólne od
     szczegółowych (dotyczących tego projektu); można to zrobić przez
     dobranie odpowiedniej formy:

     Gromadzone dane można przechowywać w różnych formach (pliki w
     systemie plików, rekordy w bazach danych) i w różnych miejscach
     (lokalne nośniki, zasoby w chmurze). W tej wersji projektu, ze
     względu na przewidywaną skalę, zdecydowano się na składowanie
     danych w nierealcynej bazie danych zarządzanej silnikiem MongoDB.
     Omówienie różnych aspektów przechowywania danych znajduje się w
     r.1.1

   - Uwagi:
     * tematyka podpunktu 1.1 nie jest aż tak istotna, z punktu widzenia
       tematu pracy, a jest bardziej rozbudowana od innych; należałoby
       poprawić proporcje,
     * zgodnie z pow. napisanym wstępem, należy dodać podpunkt o
       nierelacyjnych bazach i MongoDB,
     * nie rozwija Pani tematu metainformacji (co w nich jest
       przetrzymywane), więc je pomijam; ale można też zrobić odwrotnie:
       dodać kolejny podpunkt, albo umieścić te informacje w projekcie

4) „Pozyskiwanie informacji z plików  ...”

   * tu jest wyraźny przeskok w wypowiedzi; pojawia się pytanie: po co
     pozyskiwać informacje, skoro dane mają być tylko gromadzone?
   * trzeba to opisać

     - cel: aplikacja ma wspomagać klasyfikowanie gromadzonych danych
     - dlatego: trzeba z pliku wyciągnąć informacje, a następnie
       dostarczyć ją w formie przetworzonej,
     - sposób wydobywania właściwych informacji i przetwarzania zależy
       od rodzaju danych (dokumenty tekstowe, dane tabelaryczne, grafiki
       ....)

   * uwagi: nie zauważyłem informacji o przetwarzaniu danych innych niż
     tekstowe, w szczególności tabelarycznych; czy są implementowane?
     jak nie, to można to podkreślić: „w tej wersji skupiono się na ...
     w postaci generowania abstraktów”

5) „Projekt aplikacji wykorzystuje architekturę typu klient-serwer.
   Określenie architektura aplikacji odnosi się do wysokopoziomowej
   struktury i organizacji systemów oprogramowania. ”

   „W rozdziale 1.4 została opisana wyżej wymieniona architektura pod
   kątem charakterystyki i przypadków użycia.”


   Fakty:
   * projekt zakłada wykorzystanie http i html – czyli jest to aplikacja
     webowa,
   * zastosowanie elektrona zmienia sytuację o tyle, że nie korzysta się
     z zewnętrznej przeglądarki,

   Opis:
   * w projekcie założono zastosowanie architektury aplikacji webowej,
   * natomiast w realizacji, dzięki wykorzystaniu pakietu Electron,
     finalna aplikacja  nie wymaga używania zewnętrznej przeglądarki,
     przez co zachowuje się jak desktopowa,
   * opis architektury aplikacji webowych oraz właściwości electron
     znajduje się w punktach ...


6) Uwagi do kolejności podrozdziałów
   * dotyczący przechowywania - na początek, dotyczący architektur - na
     koniec – zgodnie z opisem we wstępie
   * w środku: tworzenie abstraktów przed ekstrakcją tekstu z PDF.


